#+TITLE: REST
#+OPTIONS: toc:1, num:nil
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js@3.8.0
#+REVEAL_THEME: moon

* The Web

** What is the World Wide Web?
#+begin_quote
a system of extensively interlinked hypertext documents: a branch of the Internet (usually preceded by the). Abbreviation: WWW

-- dictionary.com
#+end_quote

** 
Documents are linked by hyperlinks
#+CAPTION: A set of hyperlinked documents
[[./img/hyperlinking.jpg]]

* The Two Webs

** There Are Two Webs
#+ATTR_REVEAL: :frag (appear)
The human web that everyone knows about, and
#+ATTR_REVEAL: :frag (appear)
The web for machines (programmatic web).

** 
REST is about making the programmatic web more like the human web.

* REST

** What is REST?
#+ATTR_REVEAL: :frag (appear)
REpresentational State Transfer
#+ATTR_REVEAL: :frag (appear)
- /Resources/ are identified by a Uniform Resource Locator, or URL.
- A representation of that resource can be retrieved at its URL.
- If the representation is a hypermedia format, it may contain links to other resources that can then be navigated to.
- The representations are self-describing, i.e., no out-of-band information is needed to transition to nearby resources or states.

** Multiple Representations
#+ATTR_REVEAL: :frag (appear)
- There can be multiple representations of a given resource, e.g., html, csv, json, text, jpg, etc.
- All of them accesible from the one URL
- Content negotiation is used to select the desired one (using the *Accept* HTTP header)

** Hypermedia
#+begin_quote
a nonlinear medium of information that includes graphics, audio, video, plain text and hyperlinks.

-- Wikipedia
#+end_quote

** HATEOAS
#+ATTR_REVEAL: :frag (appear)
Hypermedia as the engine of application state
#+ATTR_REVEAL: :frag (appear)
A strange acronym that embodies all of the previously discussed properties of REST: links in resources are the sole means by which a client transitions to other resources and states, i.e., no hard-coding of this information clients.

* Why Does No One Do it?
#+ATTR_REVEAL: :frag (appear)
It's a lot of work!
#+ATTR_REVEAL: :frag (appear)
There are benefits but also a lot of cost.
#+ATTR_REVEAL: :frag (appear)
Most appropriate for an API that will be consumed by an outside third party.
#+ATTR_REVEAL: :frag (appear)
If you're "eating your own dog food", there's not a strong reason to use it.

* So, Is Your API RESTful?

** Your API Isn't If
#+ATTR_REVEAL: :frag (appear)
- your API returns plain old JSON (without links)
- client code has hard-coded URLs or constructs them
- the client application contains business logic
